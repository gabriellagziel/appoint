name: Performance Benchmarks

on:
  schedule:
    # Run nightly at 3 AM UTC
    - cron: '0 3 * * *'
  workflow_dispatch:
  push:
    branches: [ main, develop ]
    paths:
      - 'performance/**'
      - 'lib/**'
      - 'pubspec.yaml'

jobs:
  performance-benchmarks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Dart SDK
        uses: dart-lang/setup-dart@v1
        with:
          sdk: '3.4.0'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: stable

      - name: Install dependencies
        run: flutter pub get

      # Run performance benchmarks
      - name: Run performance benchmarks
        run: |
          echo "=== Running Performance Benchmarks ==="
          
          # Run Dart performance benchmarks
          if [ -d "performance/benchmarks" ]; then
            dart run performance/benchmarks/
          fi
          
          # Run Flutter performance tests
          if [ -f "integration_test/performance_test.dart" ]; then
            flutter drive \
              --profile \
              --trace-startup \
              --timeline-streams=Engine,Flutter,Embedder \
              --driver integration_test/driver.dart \
              --target integration_test/performance_test.dart
          fi

      # Memory profiling
      - name: Run memory profiling
        run: |
          echo "=== Running Memory Profiling ==="
          
          # Start Firebase emulators
          npm install -g firebase-tools
          firebase emulators:start --only auth,firestore,storage &
          sleep 10
          
          # Run memory profiling
          flutter run --profile --trace-startup --dart-define=PROFILE_MEMORY=true &
          sleep 30
          
          # Collect memory metrics
          echo "Memory profiling completed"

      # Startup time measurement
      - name: Measure startup time
        run: |
          echo "=== Measuring Startup Time ==="
          
          # Measure cold start time
          flutter run --profile --trace-startup --dart-define=MEASURE_STARTUP=true
          
          # Measure hot reload time
          flutter run --profile --hot

      # Generate performance report
      - name: Generate performance report
        run: |
          echo "=== Generating Performance Report ==="
          
          cat > performance-report.md << EOF
          # Performance Benchmark Report
          
          Generated on: $(date)
          
          ## Benchmark Results
          
          ### Startup Time
          - Cold start: TBD
          - Hot reload: TBD
          
          ### Memory Usage
          - Peak memory: TBD
          - Average memory: TBD
          
          ### Performance Metrics
          - FPS: TBD
          - Frame time: TBD
          
          ## Recommendations
          
          Based on the benchmark results, consider:
          1. Optimizing startup time
          2. Reducing memory usage
          3. Improving frame rates
          
          EOF

      # Upload performance report
      - name: Upload performance report
        uses: actions/upload-artifact@v4
        with:
          name: performance-benchmark-report
          path: performance-report.md
          retention-days: 90

      # Performance regression check
      - name: Check for performance regressions
        run: |
          echo "=== Checking for Performance Regressions ==="
          
          # Compare with baseline (if exists)
          if [ -f "performance/baseline.json" ]; then
            echo "Comparing with baseline..."
            # Add comparison logic here
          else
            echo "No baseline found, creating new baseline"
            # Create baseline
          fi

      # Alert on significant regressions
      - name: Alert on performance regressions
        if: failure()
        run: |
          echo "🚨 Performance regression detected!"
          echo "Please review the performance report and investigate the regression."

  # Performance budget check
  performance-budget:
    runs-on: ubuntu-latest
    needs: performance-benchmarks
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Dart SDK
        uses: dart-lang/setup-dart@v1
        with:
          sdk: '3.4.0'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: stable

      - name: Check performance budgets
        run: |
          echo "=== Checking Performance Budgets ==="
          
          # Check bundle size
          flutter build web --profile
          du -sh build/web/
          
          # Check APK size
          flutter build apk --profile
          du -sh build/app/outputs/flutter-apk/
          
          # Check iOS app size
          flutter build ios --profile --no-codesign
          du -sh build/ios/

      - name: Fail if budget exceeded
        run: |
          echo "=== Performance Budget Check ==="
          
          # Define budgets
          WEB_BUDGET=5000000  # 5MB
          APK_BUDGET=50000000  # 50MB
          IOS_BUDGET=100000000  # 100MB
          
          # Check web bundle size
          WEB_SIZE=$(du -sb build/web/ | cut -f1)
          if [ $WEB_SIZE -gt $WEB_BUDGET ]; then
            echo "❌ Web bundle size ($WEB_SIZE bytes) exceeds budget ($WEB_BUDGET bytes)"
            exit 1
          fi
          
          # Check APK size
          APK_SIZE=$(du -sb build/app/outputs/flutter-apk/ | cut -f1)
          if [ $APK_SIZE -gt $APK_BUDGET ]; then
            echo "❌ APK size ($APK_SIZE bytes) exceeds budget ($APK_BUDGET bytes)"
            exit 1
          fi
          
          echo "✅ All performance budgets met" 