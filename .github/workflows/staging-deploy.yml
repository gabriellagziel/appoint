name: Staging Deployment

push:
  branches: [ main ]

on: workflow_dispatch
env:
  STAGING_DOMAIN: staging.app-oint.com
  STAGING_ENVIRONMENT: staging

jobs:
  # Deploy to staging
  deploy-staging:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup DigitalOcean CLI
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          
      - name: Configure Docker for DigitalOcean Container Registry
        run: doctl registry docker-config
        
      - name: Build and deploy to staging
        run: |
          echo "üöÄ Deploying to staging environment..."
          
          # Build the Flutter web app
          docker run --rm -v $(pwd):/workspace -w /workspace \
            registry.digitalocean.com/appoint/flutter-ci:latest \
            bash -c "
              flutter pub get
              dart run build_runner build --delete-conflicting-outputs
              flutter build web --release --web-renderer html
            "
          
          # Deploy to DigitalOcean App Platform staging environment
          doctl apps create-deployment ${{ secrets.DIGITALOCEAN_APP_ID }} \
            --wait \
            --set-env-vars STAGING_ENVIRONMENT=true \
            --set-env-vars NODE_ENV=staging
          
          echo "‚úÖ Staging deployment completed"
          
      - name: Verify staging deployment
        run: |
          echo "üîç Verifying staging deployment..."
          
          # Wait for deployment to be ready
          sleep 30
          
          # Check if staging domain is accessible
          if curl -f -s "https://$STAGING_DOMAIN" > /dev/null; then
            echo "‚úÖ Staging deployment is live at https://$STAGING_DOMAIN"
          else
            echo "‚ùå Staging deployment failed - domain not accessible"
            exit 1
          fi
          
      - name: Run staging smoke tests
        run: |
          echo "üß™ Running staging smoke tests..."
          
          # Basic smoke tests
          curl -f -s "https://$STAGING_DOMAIN" | grep -q "App-Oint" && echo "‚úÖ Homepage loads"
          curl -f -s "https://$STAGING_DOMAIN/health" && echo "‚úÖ Health check passes"
          
      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "üéâ Staging deployment successful!"
            echo "üåê Staging URL: https://$STAGING_DOMAIN"
          else
            echo "‚ùå Staging deployment failed"
            exit 1
          fi

  # Update staging environment variables
  update-staging-env:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment: staging
    steps:
      - name: Setup DigitalOcean CLI
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          
      - name: Update staging environment variables
        run: |
          echo "üîß Updating staging environment variables..."
          
          # Set staging-specific environment variables
          doctl apps update ${{ secrets.DIGITALOCEAN_APP_ID }} \
            --set-env-vars \
            FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_STAGING_PROJECT_ID }} \
            FIREBASE_API_KEY=${{ secrets.FIREBASE_STAGING_API_KEY }} \
            FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_STAGING_AUTH_DOMAIN }} \
            FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STAGING_STORAGE_BUCKET }} \
            FIREBASE_MESSAGING_SENDER_ID=${{ secrets.REDACTED_TOKEN }} \
            FIREBASE_APP_ID=${{ secrets.FIREBASE_STAGING_APP_ID }} \
            STRIPE_PUBLISHABLE_KEY=${{ secrets.STRIPE_STAGING_PUBLISHABLE_KEY }} \
            GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_STAGING_API_KEY }}
          
          echo "‚úÖ Staging environment variables updated"
