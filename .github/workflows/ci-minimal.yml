name: Minimal CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.32.0'
  DART_VERSION: '3.4.0'

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v4
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Generate code
        run: dart run build_runner build --delete-conflicting-outputs
        
      - name: Run analysis
        run: flutter analyze
        
      - name: Check formatting
        run: dart format --set-exit-if-changed .
        
      - name: Run tests
        run: flutter test --coverage
        
      - name: Generate coverage report
        run: |
          if [ -f "coverage/lcov.info" ]; then
            genhtml coverage/lcov.info -o coverage/html
          fi
        
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30
          
      - name: Check coverage threshold
        run: |
          if [ -f "coverage/lcov.info" ]; then
            COVERAGE=$(lcov --summary coverage/lcov.info | grep "lines" | cut -d ' ' -f 4 | cut -d '%' -f 1)
            echo "Coverage: $COVERAGE%"
            if (( $(echo "$COVERAGE < 80" | bc -l) )); then
              echo "❌ Coverage is below 80% threshold"
              exit 1
            else
              echo "✅ Coverage meets 80% threshold"
            fi
          else
            echo "No coverage file found"
          fi

  build:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: test
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v4
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Generate code
        run: dart run build_runner build --delete-conflicting-outputs
        
      - name: Build web
        run: flutter build web --release
        
      - name: Upload web build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web
          retention-days: 7

  security:
    name: Security Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          flutter pub get
          cd functions && npm ci
        
      - name: Run security audit
        run: |
          cd functions
          npm audit --audit-level moderate
        
      - name: Check Flutter dependencies
        run: |
          flutter pub deps --style=tree
          flutter pub outdated