name: Security

on:
  push:
    branches: [ main, develop ]
    paths:
      - "appoint/**"
      - "functions/**"
      - "marketing/**"
      - "business/**"
      - "admin/**"
      - "enterprise-onboarding-portal/**"
      - ".github/workflows/security.yml"
  pull_request:
    branches: [ main, develop ]
    paths:
      - "appoint/**"
      - "functions/**"
      - "marketing/**"
      - "business/**"
      - "admin/**"
      - "enterprise-onboarding-portal/**"
      - ".github/workflows/security.yml"
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read
  actions: read

concurrency:
  group: security-${{ github.ref }}
  cancel-in-progress: true

jobs:
  dependency-scan:
    name: Dependency Scan
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Check Dart dependencies
        run: flutter pub outdated --mode=null-safety
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: functions/package-lock.json
      
      - name: Install Node dependencies
        run: |
          cd functions
          npm ci
      
      - name: Audit Node dependencies
        run: |
          cd functions
          npm audit --audit-level=moderate
      
      - name: Check for known vulnerabilities
        run: |
          cd functions
          npm audit --json > audit-report.json || true
      
      - name: Upload audit report
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-report
          path: functions/audit-report.json
          retention-days: 30

  code-scan:
    name: Code Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Run security analysis
        run: flutter analyze --fatal-infos
      
      - name: Check for hardcoded secrets
        run: |
          # Check for potential secrets in code
          if grep -r "password\|secret\|key\|token" lib/ --include="*.dart" | grep -v "//" | grep -v "TODO"; then
            echo "⚠️  Potential hardcoded secrets found"
            exit 1
          fi
      
      - name: Check for unsafe dependencies
        run: |
          # Check for known unsafe packages
          flutter pub deps | grep -E "(http:|https:)" || true

  firebase-security:
    name: Firebase Security Rules
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
      
      - name: Test Firestore rules
        run: |
          firebase emulators:exec "firebase firestore:rules:test" --only firestore
      
      - name: Validate security rules
        run: |
          # Check if security rules are properly configured
          if [ ! -f "firestore.rules" ]; then
            echo "❌ Firestore security rules not found"
            exit 1
          fi
          
          # Basic validation of security rules
          if ! grep -q "allow read\|allow write" firestore.rules; then
            echo "❌ No security rules found in firestore.rules"
            exit 1
          fi
          
          echo "✅ Firestore security rules validated"

  secrets-scan:
    name: Secrets Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: .
          base: HEAD~1
          head: HEAD
          extra_args: --only-verified
      
      - name: Check for exposed API keys
        run: |
          # Check for exposed API keys in recent commits
          if git log --oneline -10 | grep -i "api\|key\|token\|secret"; then
            echo "⚠️  Potential API keys found in recent commits"
            exit 1
          fi

  compliance-check:
    name: Compliance Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      
      - name: Check privacy policy
        run: |
          if [ ! -f "PRIVACY_COMPLIANCE.md" ]; then
            echo "❌ Privacy compliance document not found"
            exit 1
          fi
          
          echo "✅ Privacy compliance document found"
      
      - name: Check accessibility compliance
        run: |
          if [ ! -f "ACCESSIBILITY.md" ]; then
            echo "❌ Accessibility document not found"
            exit 1
          fi
          
          echo "✅ Accessibility document found"
      
      - name: Check license compliance
        run: |
          if [ ! -f "LICENSE" ] && [ ! -f "LICENSE.md" ]; then
            echo "❌ License file not found"
            exit 1
          fi
          
          echo "✅ License file found" 