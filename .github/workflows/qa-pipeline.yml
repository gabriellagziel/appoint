name: Comprehensive QA Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.32.0'
  DART_VERSION: '3.4.0'
  NODE_VERSION: '18'

jobs:
  code-quality:
    name: Code Quality & Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v4
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Run Flutter analyze
        run: flutter analyze
        
      - name: Check code formatting
        run: dart format --set-exit-if-changed .
        
      - name: Verify dependencies
        run: flutter pub deps --style=tree

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        test-group: [models, services, features, utils]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v4
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Generate mocks
        run: dart run build_runner build --delete-conflicting-outputs
        
      - name: Run unit tests
        run: flutter test test/${{ matrix.test-group }}/
        
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-results-${{ matrix.test-group }}
          path: test-results/
          retention-days: 7

  test-coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v4
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Generate mocks
        run: dart run build_runner build --delete-conflicting-outputs
        
      - name: Run tests with coverage
        run: flutter test --coverage
        
      - name: Generate coverage report
        run: genhtml coverage/lcov.info -o coverage/html
        
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/html/
          retention-days: 30
          
      - name: Check coverage threshold
        run: |
          COVERAGE=$(lcov --summary coverage/lcov.info | grep "lines" | cut -d ' ' -f 4 | cut -d '%' -f 1)
          echo "Coverage: $COVERAGE%"
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "❌ Coverage is below 80% threshold"
            exit 1
          else
            echo "✅ Coverage meets 80% threshold"
          fi

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        platform: [android, ios, web]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v4
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Run integration tests
        run: flutter test integration_test/ --flavor ${{ matrix.platform }}
        
      - name: Upload integration test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: integration-test-results-${{ matrix.platform }}
          path: test-results/
          retention-days: 7

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    timeout-minutes: 25
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v4
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Run performance tests
        run: |
          if [ -d "test/performance/" ]; then
            flutter test test/performance/
          else
            echo "Performance tests not found, skipping"
          fi
        
      - name: Build app for performance analysis
        run: flutter build apk --profile
        
      - name: Run performance benchmarks
        run: |
          echo "Running performance benchmarks..."
          # Add performance benchmark scripts here
          
      - name: Upload performance report
        uses: actions/upload-artifact@v4
        with:
          name: performance-report
          path: performance-results/
          retention-days: 30

  security-tests:
    name: Security Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v4
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install dependencies
        run: |
          flutter pub get
          cd functions && npm ci
          
      - name: Run Flutter security check
        run: |
          flutter pub deps --style=tree
          flutter pub outdated
          
      - name: Run Node.js security audit
        run: |
          cd functions
          npm audit --audit-level moderate
          
      - name: Run dependency vulnerability scan
        run: |
          npm audit --audit-level moderate

  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v4
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Run accessibility tests
        run: |
          if [ -d "test/a11y/" ]; then
            flutter test test/a11y/
          else
            echo "Accessibility tests not found, skipping"
          fi

  localization-tests:
    name: Localization Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v4
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Run localization tests
        run: |
          if [ -d "test/l10n/" ]; then
            flutter test test/l10n/
          else
            echo "Localization tests not found, skipping"
          fi

  firebase-tests:
    name: Firebase Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
        
      - name: Install dependencies
        run: |
          cd functions
          npm ci
          
      - name: Start Firebase emulators
        run: |
          firebase emulators:start --only functions,firestore,auth &
          sleep 10
          
      - name: Run Firebase tests
        run: |
          cd functions
          npm test
          
      - name: Test Firestore rules
        run: |
          firebase emulators:exec --only firestore "npm test"

  quality-gates:
    name: Quality Gates
    runs-on: ubuntu-latest
    needs: [code-quality, unit-tests, test-coverage, integration-tests, performance-tests, security-tests, accessibility-tests, localization-tests, firebase-tests]
    timeout-minutes: 5
    
    steps:
      - name: Check all jobs status
        run: |
          echo "Checking job statuses..."
          if [ "${{ needs.code-quality.result }}" != "success" ]; then
            echo "❌ Code quality check failed"
            exit 1
          fi
          if [ "${{ needs.test-coverage.result }}" != "success" ]; then
            echo "❌ Test coverage check failed"
            exit 1
          fi
          if [ "${{ needs.security-tests.result }}" != "success" ]; then
            echo "❌ Security tests failed"
            exit 1
          fi
          echo "✅ All quality gates passed"
          
      - name: Generate QA report
        run: |
          cat > qa-report.md << EOF
          # 🎉 QA Report
          
          ## ✅ Quality Metrics
          - **Code Quality**: ${{ needs.code-quality.result }}
          - **Test Coverage**: ${{ needs.test-coverage.result }}
          - **Integration Tests**: ${{ needs.integration-tests.result }}
          - **Performance Tests**: ${{ needs.performance-tests.result }}
          - **Security Tests**: ${{ needs.security-tests.result }}
          - **Accessibility Tests**: ${{ needs.accessibility-tests.result }}
          - **Localization Tests**: ${{ needs.localization-tests.result }}
          - **Firebase Tests**: ${{ needs.firebase-tests.result }}
          
          ## 🚀 Overall Status: ${{ job.status }}
          EOF
          
      - name: Upload QA report
        uses: actions/upload-artifact@v4
        with:
          name: qa-report
          path: qa-report.md
          retention-days: 30 