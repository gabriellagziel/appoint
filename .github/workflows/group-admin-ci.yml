name: Group Admin CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'lib/features/group_admin/**'
      - 'test/smoke/**'
      - 'integration_test/**'
      - 'tool/seed/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'lib/features/group_admin/**'
      - 'test/smoke/**'
      - 'integration_test/**'
      - 'tool/seed/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Setup Firebase CLI
      run: |
        curl -sL https://firebase.tools | bash
        firebase --version
    
    - name: Start Firestore Emulator
      run: |
        firebase emulators:start --only firestore --project demo-project &
        sleep 10
        firebase emulators:export test-data --project demo-project
    
    - name: Load Seed Data
      run: |
        flutter pub run tool/seed/group_admin_seed.dart
        sleep 5
    
    - name: Run Smoke Tests
      run: flutter test test/smoke/
    
    - name: Run Integration Tests
      run: flutter test integration_test/group_admin_e2e_test.dart
    
    - name: Run Unit Tests
      run: flutter test test/features/group_admin/
    
    - name: Analyze Code
      run: flutter analyze
    
    - name: Check Format
      run: dart format --set-exit-if-changed .
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          test-results/
          coverage/
    
    - name: Stop Emulator
      if: always()
      run: |
        pkill -f firebase
        sleep 5

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Build Web
      run: flutter build web --release
    
    - name: Build Android
      run: flutter build apk --release
    
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          build/web/
          build/app/outputs/flutter-apk/

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Security Audit
      run: |
        flutter pub deps --style=tree
        flutter pub outdated
    
    - name: Check for Secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: .
        base: HEAD~1
        head: HEAD

  performance:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Performance Test
      run: |
        flutter test --coverage
        genhtml coverage/lcov.info -o coverage/html
        flutter test test/performance/
    
    - name: Upload Coverage
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage/

  deploy:
    runs-on: ubuntu-latest
    needs: [test, build, security, performance]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
    
    - name: Deploy to Firebase Hosting
      run: |
        firebase deploy --only hosting --project production-project
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
    
    - name: Deploy to App Store Connect
      run: |
        flutter build ios --release
        # Add iOS deployment steps here
      env:
        APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
    
    - name: Deploy to Google Play
      run: |
        flutter build appbundle --release
        # Add Android deployment steps here
      env:
        GOOGLE_PLAY_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}

  notify:
    runs-on: ubuntu-latest
    needs: [test, build, security, performance]
    if: always()
    
    steps:
    - name: Notify Success
      if: needs.test.result == 'success' && needs.build.result == 'success'
      run: |
        echo "✅ Group Admin CI passed successfully!"
        # Add notification logic here (Slack, email, etc.)
    
    - name: Notify Failure
      if: needs.test.result == 'failure' || needs.build.result == 'failure'
      run: |
        echo "❌ Group Admin CI failed!"
        # Add notification logic here (Slack, email, etc.)
