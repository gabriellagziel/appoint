name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/labeler@v5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  coverage:
    runs-on: ubuntu-latest
    needs: label
    container:
      image: ghcr.io/your-org/app-oint-dev:latest
      options: --pull
    env:
      PUB_HOSTED_URL: https://pub.flutter-io.cn
      FLUTTER_STORAGE_BASE_URL: https://storage.flutter-io.cn
      http_proxy: http://proxy.example.com:3128
      https_proxy: http://proxy.example.com:3128
    steps:
      - uses: actions/checkout@v4
      - name: Cache Flutter SDK
        uses: actions/cache@v3
        with:
          path: ~/.flutter
          key: ${{ runner.os }}-flutter-${{ hashFiles('.github/workflows/pr_checks.yml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-
      - name: Cache Pub packages
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-
      # network checks removed for offline usage
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          cache: true
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: '3.4.0'
      - name: Ensure Flutter & Dart in PATH
        run: |
          echo "/usr/local/flutter/bin" >> $GITHUB_PATH
          echo "/usr/lib/dart/bin" >> $GITHUB_PATH
      - name: Verify Binaries
        run: |
          which flutter
          flutter --version
          which dart
          dart --version
      - name: Configure Network Allowlist
        run: |
          scripts/update_network_allowlist.sh ${{ secrets.GHE_ENTERPRISE }} ${{ secrets.GHE_TOKEN }}
      - name: Pre-flight: Verify Dart
        run: |
          which dart
          dart --version
      # network checks removed for offline usage
      - run: flutter pub get
      - name: Check Dart formatting
        run: dart format --output=none --set-exit-if-changed .
      - name: Analyze code
        run: flutter analyze
      - run: dart run build_runner build --delete-conflicting-outputs --offline
      - name: Generate localizations
        run: flutter gen-l10n
      - run: dart test --coverage
      - name: Calculate coverage
        id: cov
        run: |
          total=$(grep -o 'LF:[0-9]*' coverage/lcov.info | cut -d: -f2 | paste -sd+ - | bc)
          covered=$(grep -o 'LH:[0-9]*' coverage/lcov.info | cut -d: -f2 | paste -sd+ - | bc)
          pct=$(awk "BEGIN {print ($covered/$total)*100}")
          echo "pct=$pct" >> $GITHUB_OUTPUT
      - name: Comment coverage
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pct = Number('${{ steps.cov.outputs.pct }}').toFixed(2);
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Test coverage: **${pct}%**`
            });
            core.summary.addHeading('Coverage').addRaw(`${pct}%`).write();
      - name: Fail if coverage below 80%
        run: |
          pct=${{ steps.cov.outputs.pct }}
          if (( $(echo "$pct < 80" | bc -l) )); then
            echo "Coverage $pct% is below threshold" >&2
            exit 1
          fi
