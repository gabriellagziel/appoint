name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/labeler@v5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  coverage:
    runs-on: ubuntu-latest
    needs: label
    env:
      PUB_HOSTED_URL: https://pub.dev
      FLUTTER_STORAGE_BASE_URL: https://storage.googleapis.com
    steps:
      - uses: actions/checkout@v4
      - name: Check network access
        run: |
          curl --fail https://storage.googleapis.com
          curl --fail https://dart.dev
          curl --fail https://pub.dev
          curl --fail https://firebase-public.firebaseio.com
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.20.0'
      - run: echo "$HOME/.flutter/bin" >> $GITHUB_PATH
      - name: Configure Network Allowlist
        run: |
          scripts/update_network_allowlist.sh ${{ secrets.GHE_ENTERPRISE }} ${{ secrets.GHE_TOKEN }}
      - name: Pre-flight: Verify network & Dart
        run: |
          which dart
          dart --version
          curl --fail https://firebase-public.firebaseio.com
          curl --fail https://storage.googleapis.com
          for host in pub.dev storage.googleapis.com firebase-public.firebaseio.com metadata.google.internal 169.254.169.254 raw.githubusercontent.com dart.dev; do
            curl --head --fail https://$host || { echo "u274c Cannot reach $host" >&2; exit 1; }
          done
      - name: Check storage connectivity
        run: curl --fail https://storage.googleapis.com
      - name: Check network access
        run: |
          curl --fail https://storage.googleapis.com
          curl --fail https://dart.dev
          curl --fail https://pub.dev
          curl --fail https://firebase-public.firebaseio.com
      - run: flutter pub get --offline
      - run: dart pub get
      - run: dart run build_runner build --delete-conflicting-outputs --offline
      - run: dart test --coverage
      - name: Calculate coverage
        id: cov
        run: |
          total=$(grep -o 'LF:[0-9]*' coverage/lcov.info | cut -d: -f2 | paste -sd+ - | bc)
          covered=$(grep -o 'LH:[0-9]*' coverage/lcov.info | cut -d: -f2 | paste -sd+ - | bc)
          pct=$(awk "BEGIN {print ($covered/$total)*100}")
          echo "pct=$pct" >> $GITHUB_OUTPUT
      - name: Comment coverage
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pct = Number('${{ steps.cov.outputs.pct }}').toFixed(2);
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Test coverage: **${pct}%**`
            });
            core.summary.addHeading('Coverage').addRaw(`${pct}%`).write();
      - name: Fail if coverage below 80%
        run: |
          pct=${{ steps.cov.outputs.pct }}
          if (( $(echo "$pct < 80" | bc -l) )); then
            echo "Coverage $pct% is below threshold" >&2
            exit 1
          fi
