name: Dependency Vulnerability Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:

jobs:
  dependency-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Setup Dart SDK
        uses: dart-lang/setup-dart@v1
        with:
          sdk: '3.4.0'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: stable

      # Install dependencies
      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Install NPM dependencies
        run: cd functions && npm install

      - name: Install Python dependencies
        run: |
          pip install safety bandit pip-audit

      # Dart/Flutter dependency checks
      - name: Check Dart dependencies
        run: |
          echo "=== Checking Dart dependencies ==="
          flutter pub outdated --mode=null-safety
          flutter pub deps --style=tree

      - name: Run Dart dependency audit
        run: |
          echo "=== Running Dart dependency audit ==="
          # Check for known vulnerabilities in dependencies
          flutter pub deps --style=compact | grep -E "(http|https)" || true

      # NPM dependency checks
      - name: Run NPM audit
        run: |
          echo "=== Running NPM audit ==="
          cd functions
          npm audit --audit-level=moderate
          npm outdated

      # Python dependency checks
      - name: Run Python security audit
        run: |
          echo "=== Running Python security audit ==="
          safety check || true
          bandit -r . -f json -o bandit-report.json || true

      # Custom vulnerability checks
      - name: Check for hardcoded secrets
        run: |
          echo "=== Checking for hardcoded secrets ==="
          # Check for API keys, passwords, etc.
          grep -r -i "api_key\|password\|secret\|token" . --exclude-dir=.git --exclude-dir=node_modules --exclude-dir=.dart_tool || true

      - name: Check for outdated packages
        run: |
          echo "=== Checking for outdated packages ==="
          flutter pub outdated
          cd functions && npm outdated

      # Generate dependency report
      - name: Generate dependency report
        run: |
          echo "=== Generating dependency report ==="
          cat > dependency-report.md << EOF
          # Dependency Vulnerability Report
          
          Generated on: $(date)
          
          ## Dart/Flutter Dependencies
          \`\`\`
          $(flutter pub deps --style=compact)
          \`\`\`
          
          ## NPM Dependencies
          \`\`\`
          $(cd functions && npm list --depth=0)
          \`\`\`
          
          ## Outdated Packages
          \`\`\`
          $(flutter pub outdated)
          \`\`\`
          EOF

      # Upload reports
      - name: Upload dependency report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-vulnerability-report
          path: |
            dependency-report.md
            bandit-report.json
          retention-days: 30

      # Comment on PR if vulnerabilities found
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('dependency-report.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## üîç Dependency Vulnerability Scan Results
              
              ${report}
              
              **Note**: This is an automated security scan. Please review any vulnerabilities found.`
            });

      # Fail if critical vulnerabilities found
      - name: Check for critical vulnerabilities
        run: |
          echo "=== Checking for critical vulnerabilities ==="
          
          # Check NPM audit for critical issues
          if npm audit --audit-level=critical 2>/dev/null | grep -q "critical"; then
            echo "‚ùå Critical NPM vulnerabilities found"
            exit 1
          fi
          
          # Check Python safety for critical issues
          if safety check 2>/dev/null | grep -q "CRITICAL"; then
            echo "‚ùå Critical Python vulnerabilities found"
            exit 1
          fi
          
          echo "‚úÖ No critical vulnerabilities found" 