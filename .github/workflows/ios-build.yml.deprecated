name: iOS Build and Deploy

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'release'
        type: choice
        options:
          - debug
          - release
          - profile
      deploy_to_testflight:
        description: 'Deploy to TestFlight'
        required: false
        default: false
        type: boolean

env:
  FLUTTER_VERSION: '3.24.5'
  XCODE_VERSION: '15.0'

jobs:
  build-ios:
    runs-on: macos-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          cache: true
          
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Generate code
        run: |
          echo "üîß Running code generation..."
          dart run build_runner build --delete-conflicting-outputs || echo "‚ö†Ô∏è Code generation completed with warnings"
        continue-on-error: true
        
      - name: Build iOS
        run: |
          echo "üçé Building iOS app..."
          flutter build ios --${{ github.event.inputs.build_type || 'release' }} --no-codesign
          echo "‚úÖ iOS build completed"
          
      - name: Upload iOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: build/ios/iphoneos/Runner.app
          retention-days: 30

  code-sign-and-archive:
    needs: build-ios
    runs-on: macos-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    timeout-minutes: 45
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          cache: true
          
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Setup code signing
        uses: apple-actions/import-codesigning-certs@v1
        with:
          p12-file-base64: ${{ secrets.IOS_P12_CERTIFICATE }}
          p12-password: ${{ secrets.IOS_P12_PASSWORD }}
          
      - name: Setup provisioning profile
        uses: apple-actions/download-provisioning-profiles@v1
        with:
          bundle-id: 'com.appoint.app'
          profile-type: 'IOS_APP_STORE'
          issuer-id: ${{ secrets.APPLE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPLE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPLE_API_PRIVATE_KEY }}
          
      - name: Build and archive
        run: |
          echo "üì¶ Building and archiving iOS app..."
          flutter build ios --release
          xcodebuild -workspace ios/Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -destination generic/platform=iOS \
            -archivePath build/ios/Runner.xcarchive \
            archive
          echo "‚úÖ Archive completed"
          
      - name: Export IPA
        run: |
          echo "üì± Exporting IPA..."
          xcodebuild -exportArchive \
            -archivePath build/ios/Runner.xcarchive \
            -exportPath build/ios/ipa \
            -exportOptionsPlist ios/ExportOptions.plist
          echo "‚úÖ IPA exported"
          
      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: build/ios/ipa/Runner.ipa
          retention-days: 30

  deploy-testflight:
    needs: code-sign-and-archive
    runs-on: macos-latest
    if: github.ref == 'refs/heads/main' && github.event.inputs.deploy_to_testflight == 'true'
    timeout-minutes: 20
    steps:
      - name: Download IPA
        uses: actions/download-artifact@v4
        with:
          name: ios-ipa
          path: build/ios/ipa/
          
      - name: Deploy to TestFlight
        uses: apple-actions/upload-testflight@v1
        with:
          app-path: build/ios/ipa/Runner.ipa
          issuer-id: ${{ secrets.APPLE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPLE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPLE_API_PRIVATE_KEY }}
          
      - name: Notify TestFlight deployment
        run: |
          echo "‚úÖ Successfully deployed to TestFlight"
          echo "üì± Build is now available for testing"

  deploy-app-store:
    needs: code-sign-and-archive
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/v')
    timeout-minutes: 20
    steps:
      - name: Download IPA
        uses: actions/download-artifact@v4
        with:
          name: ios-ipa
          path: build/ios/ipa/
          
      - name: Deploy to App Store
        uses: apple-actions/upload-app-store@v1
        with:
          app-path: build/ios/ipa/Runner.ipa
          issuer-id: ${{ secrets.APPLE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPLE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPLE_API_PRIVATE_KEY }}
          
      - name: Notify App Store deployment
        run: |
          echo "‚úÖ Successfully submitted to App Store"
          echo "üì± App is now in review"