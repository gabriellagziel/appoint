name: Translation Sync & Validation

on:
  push:
    paths:
      - 'lib/l10n/**/*.arb'
      - 'l10n.yaml'
  pull_request:
    paths:
      - 'lib/l10n/**/*.arb'
      - 'l10n.yaml'
  workflow_dispatch:

jobs:
  # Validate ARB files
  validate-arb:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Validate ARB files
        run: |
          echo "🔍 Validating ARB translation files..."
          python3 scripts/validate_translations.py
          
      - name: Check key count consistency
        run: |
          echo "📊 Checking key count consistency..."
          
          # Count keys in each ARB file
          for arb_file in lib/l10n/*.arb; do
            if [ -f "$arb_file" ]; then
              key_count=$(grep -c '^  "' "$arb_file" || echo "0")
              echo "$(basename "$arb_file"): $key_count keys"
            fi
          done
          
          # Verify all files have the same key count
          key_counts=$(for arb_file in lib/l10n/*.arb; do
            if [ -f "$arb_file" ]; then
              grep -c '^  "' "$arb_file" || echo "0"
            fi
          done | sort -u)
          
          unique_counts=$(echo "$key_counts" | wc -l)
          if [ "$unique_counts" -gt 1 ]; then
            echo "❌ Inconsistent key counts across ARB files"
            exit 1
          else
            echo "✅ All ARB files have consistent key count"
          fi

  # Sync translations
  sync-translations:
    needs: validate-arb
    runs-on: ubuntu-latest
    timeout-minutes: 15
    container:
      image: registry.digitalocean.com/appoint/flutter-ci:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Generate translations
        run: |
          echo "🔄 Generating translations..."
          flutter gen-l10n
          
      - name: Verify generated files
        run: |
          echo "🔍 Verifying generated translation files..."
          
          # Check if generated files exist
          if [ -d "lib/generated" ]; then
            echo "✅ Generated translation files found"
            ls -la lib/generated/
          else
            echo "❌ Generated translation files not found"
            exit 1
          fi
          
      - name: Run translation tests
        run: |
          echo "🧪 Running translation tests..."
          
          # Test that all translations load correctly
          flutter test test/translation_test.dart || echo "⚠️ Translation tests not found, skipping"
          
      - name: Commit generated files
        if: github.event_name == 'push'
        run: |
          echo "📝 Committing generated translation files..."
          
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if git diff --quiet; then
            echo "No changes to commit"
          else
            git add lib/generated/
            git commit -m "🔄 Auto-sync translations [skip ci]"
            git push
          fi

  # Reject PR with malformed ARB files
  reject-malformed:
    if: failure() && github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Comment on PR
        run: |
          echo "❌ Rejecting PR with malformed ARB files"
          
          COMMENT="🚨 **Translation Validation Failed**
          
          This PR contains malformed ARB translation files. Please fix the following issues:
          
          - Ensure all ARB files have consistent key count (709 keys)
          - Fix any syntax errors in ARB files
          - Verify all translation keys are present in all languages
          
          The PR will be blocked until these issues are resolved.
          
          ---
          *This is an automated message from the Translation Sync workflow.*"
          
          gh pr comment ${{ github.event.pull_request.number }} --body "$COMMENT"
          
      - name: Fail the workflow
        run: |
          echo "❌ Translation validation failed - PR rejected"
          exit 1