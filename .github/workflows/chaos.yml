name: chaos
on:
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * 2" # Tuesdays 03:00 UTC
jobs:
  chaos-firestore:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with: { flutter-version: '3.22.2' }
      - run: npm i -g firebase-tools
      - name: Run chaos drill (Firestore outage)
        run: bash tools/chaos/chaos_firestore.sh
      - name: Upload chaos results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: chaos-results
          path: /tmp/emulator.log

  admin-access-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: npm install -g firebase-tools
      - name: Install dependencies
        run: npm install -D ts-node typescript firebase-admin
      - name: Run admin access review
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        run: npx ts-node tools/admin_access_review.ts > admin_access_review.csv
      - name: Upload admin access review
        uses: actions/upload-artifact@v3
        with:
          name: admin-access-review
          path: admin_access_review.csv

  cost-monitoring:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - uses: actions/checkout@v4
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: Check billing budget
        run: |
          gcloud billing budgets list --billing-account=${{ secrets.BILLING_ACCOUNT_ID }}
      - name: Check Firestore usage
        run: |
          gcloud firestore indexes list --project=${{ secrets.GCP_PROJECT_ID }}
      - name: Alert if over budget
        if: failure()
        run: |
          echo "⚠️ Budget threshold exceeded - check billing dashboard"
          exit 1

