name: Asset Optimization

on:
  push:
    branches: [ main ]
    paths:
      - 'assets/**'
      - 'web/assets/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'assets/**'
      - 'web/assets/**'

jobs:
  optimize-assets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install image optimization tools
        run: |
          npm install -g imagemin-cli
          npm install -g svgo
          npm install -g pngquant-bin
          npm install -g mozjpeg-bin
      
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'
          cache: true
      
      - name: Optimize PNG assets
        run: |
          echo "Optimizing PNG assets..."
          find assets -name "*.png" -type f | while read file; do
            echo "Optimizing: $file"
            imagemin "$file" --out-dir="$(dirname "$file")" --plugin=pngquant
          done
      
      - name: Optimize SVG assets
        run: |
          echo "Optimizing SVG assets..."
          find assets -name "*.svg" -type f | while read file; do
            echo "Optimizing: $file"
            svgo "$file" -o "$file"
          done
      
      - name: Optimize web assets
        run: |
          echo "Optimizing web assets..."
          if [ -d "web/assets" ]; then
            find web/assets -name "*.png" -type f | while read file; do
              echo "Optimizing: $file"
              imagemin "$file" --out-dir="$(dirname "$file")" --plugin=pngquant
            done
            
            find web/assets -name "*.svg" -type f | while read file; do
              echo "Optimizing: $file"
              svgo "$file" -o "$file"
            done
          fi
      
      - name: Calculate asset savings
        run: |
          echo "Calculating asset optimization savings..."
          # This would require comparing before/after sizes
          # For now, just report the optimization was completed
          echo "Asset optimization completed successfully!"
      
      - name: Upload optimized assets
        uses: actions/upload-artifact@v3
        with:
          name: optimized-assets
          path: |
            assets/
            web/assets/
          retention-days: 7
      
      - name: Create optimization report
        run: |
          echo "# Asset Optimization Report" > asset-optimization-report.md
          echo "" >> asset-optimization-report.md
          echo "Generated on: $(date)" >> asset-optimization-report.md
          echo "" >> asset-optimization-report.md
          echo "## Optimized Assets" >> asset-optimization-report.md
          echo "" >> asset-optimization-report.md
          echo "### PNG Files" >> asset-optimization-report.md
          find assets -name "*.png" -type f | wc -l >> asset-optimization-report.md
          echo "" >> asset-optimization-report.md
          echo "### SVG Files" >> asset-optimization-report.md
          find assets -name "*.svg" -type f | wc -l >> asset-optimization-report.md
          echo "" >> asset-optimization-report.md
          echo "## Total Assets Processed" >> asset-optimization-report.md
          echo "$(find assets -name "*.png" -o -name "*.svg" | wc -l) files" >> asset-optimization-report.md
      
      - name: Upload optimization report
        uses: actions/upload-artifact@v3
        with:
          name: optimization-report
          path: asset-optimization-report.md
          retention-days: 30 