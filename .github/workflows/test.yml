name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Run unit and widget tests
        run: flutter test --coverage
      
      - name: Run integration tests
        run: |
          # Start Firebase emulators
          firebase emulators:start --only auth,firestore,storage &
          sleep 10
          flutter test integration_test/
      
      - name: Generate coverage report
        run: |
          genhtml coverage/lcov.info -o coverage/html
      
      - name: Check coverage threshold
        run: |
          COVERAGE=$(lcov --summary coverage/lcov.info | grep lines | awk '{print $2}' | sed 's/%//')
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "❌ Coverage ($COVERAGE%) below threshold (80%)"
            exit 1
          else
            echo "✅ Coverage ($COVERAGE%) meets threshold (80%)"
          fi
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          minimum_coverage: 80
      
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage/lcov.info
            coverage/html/
          retention-days: 90

  test-golden:
    name: Golden Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Run golden tests
        run: flutter test test/golden/

  test-performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Run performance tests
        run: |
          # Start Firebase emulators
          firebase emulators:start --only auth,firestore,storage &
          sleep 10
          flutter drive \
            --profile \
            --trace-startup \
            --timeline-streams=Engine,Flutter,Embedder \
            --driver integration_test/driver.dart \
            --target integration_test/performance_test.dart

  test-security:
    name: Security Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Run security tests
        run: flutter test test/security/
      
      - name: Check dependencies for vulnerabilities
        run: |
          flutter pub outdated --mode=null-safety
          cd functions && npm audit 