name: Validate Secrets

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'  # Weekly validation
  pull_request:
    branches: [ main, develop ]

jobs:
  validate-secrets:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Validate Firebase Secrets
        run: |
          echo "üîç Validating Firebase secrets..."
          
          if [ -n "${{ secrets.FIREBASE_TOKEN }}" ]; then
            echo "‚úÖ FIREBASE_TOKEN is set"
          else
            echo "‚ùå FIREBASE_TOKEN is missing"
            exit 1
          fi
          
          if [ -n "${{ secrets.FIREBASE_PROJECT_ID }}" ]; then
            echo "‚úÖ FIREBASE_PROJECT_ID is set"
          else
            echo "‚ùå FIREBASE_PROJECT_ID is missing"
            exit 1
          fi
          
          echo "‚úÖ Firebase secrets validation passed"
          
      - name: Validate Android Secrets
        run: |
          echo "üîç Validating Android secrets..."
          
          if [ -n "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" ]; then
            echo "‚úÖ ANDROID_KEYSTORE_BASE64 is set"
          else
            echo "‚ùå ANDROID_KEYSTORE_BASE64 is missing"
            exit 1
          fi
          
          if [ -n "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" ]; then
            echo "‚úÖ ANDROID_KEYSTORE_PASSWORD is set"
          else
            echo "‚ùå ANDROID_KEYSTORE_PASSWORD is missing"
            exit 1
          fi
          
          if [ -n "${{ secrets.ANDROID_KEY_ALIAS }}" ]; then
            echo "‚úÖ ANDROID_KEY_ALIAS is set"
          else
            echo "‚ùå ANDROID_KEY_ALIAS is missing"
            exit 1
          fi
          
          if [ -n "${{ secrets.ANDROID_KEY_PASSWORD }}" ]; then
            echo "‚úÖ ANDROID_KEY_PASSWORD is set"
          else
            echo "‚ùå ANDROID_KEY_PASSWORD is missing"
            exit 1
          fi
          
          if [ -n "${{ secrets.PLAY_STORE_JSON_KEY }}" ]; then
            echo "‚úÖ PLAY_STORE_JSON_KEY is set"
          else
            echo "‚ùå PLAY_STORE_JSON_KEY is missing"
            exit 1
          fi
          
          echo "‚úÖ Android secrets validation passed"
          
      - name: Validate iOS Secrets
        run: |
          echo "üîç Validating iOS secrets..."
          
          if [ -n "${{ secrets.IOS_P12_CERTIFICATE }}" ]; then
            echo "‚úÖ IOS_P12_CERTIFICATE is set"
          else
            echo "‚ùå IOS_P12_CERTIFICATE is missing"
            exit 1
          fi
          
          if [ -n "${{ secrets.IOS_P12_PASSWORD }}" ]; then
            echo "‚úÖ IOS_P12_PASSWORD is set"
          else
            echo "‚ùå IOS_P12_PASSWORD is missing"
            exit 1
          fi
          
          if [ -n "${{ secrets.APPLE_ISSUER_ID }}" ]; then
            echo "‚úÖ APPLE_ISSUER_ID is set"
          else
            echo "‚ùå APPLE_ISSUER_ID is missing"
            exit 1
          fi
          
          if [ -n "${{ secrets.APPLE_API_KEY_ID }}" ]; then
            echo "‚úÖ APPLE_API_KEY_ID is set"
          else
            echo "‚ùå APPLE_API_KEY_ID is missing"
            exit 1
          fi
          
          if [ -n "${{ secrets.APPLE_API_PRIVATE_KEY }}" ]; then
            echo "‚úÖ APPLE_API_PRIVATE_KEY is set"
          else
            echo "‚ùå APPLE_API_PRIVATE_KEY is missing"
            exit 1
          fi
          
          echo "‚úÖ iOS secrets validation passed"
          
      - name: Validate DigitalOcean Secrets
        run: |
          echo "üîç Validating DigitalOcean secrets..."
          
          if [ -n "${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" ]; then
            echo "‚úÖ DIGITALOCEAN_ACCESS_TOKEN is set"
          else
            echo "‚ùå DIGITALOCEAN_ACCESS_TOKEN is missing"
            exit 1
          fi
          
          if [ -n "${{ secrets.DIGITALOCEAN_APP_ID }}" ]; then
            echo "‚úÖ DIGITALOCEAN_APP_ID is set"
          else
            echo "‚ùå DIGITALOCEAN_APP_ID is missing"
            exit 1
          fi
          
          echo "‚úÖ DigitalOcean secrets validation passed"
          
      - name: Validate Notification Secrets
        run: |
          echo "üîç Validating notification secrets..."
          
          if [ -n "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            echo "‚úÖ SLACK_WEBHOOK_URL is set"
          else
            echo "‚ö†Ô∏è SLACK_WEBHOOK_URL is missing (optional)"
          fi
          
          if [ -n "${{ secrets.DISCORD_WEBHOOK }}" ]; then
            echo "‚úÖ DISCORD_WEBHOOK is set"
          else
            echo "‚ö†Ô∏è DISCORD_WEBHOOK is missing (optional)"
          fi
          
          echo "‚úÖ Notification secrets validation passed"
          
      - name: Validate Stripe Secrets
        run: |
          echo "üîç Validating Stripe secrets..."
          
          if [ -n "${{ secrets.STRIPE_PUBLISHABLE_KEY }}" ]; then
            echo "‚úÖ STRIPE_PUBLISHABLE_KEY is set"
          else
            echo "‚ùå STRIPE_PUBLISHABLE_KEY is missing"
            exit 1
          fi
          
          if [ -n "${{ secrets.STRIPE_SECRET_KEY }}" ]; then
            echo "‚úÖ STRIPE_SECRET_KEY is set"
          else
            echo "‚ùå STRIPE_SECRET_KEY is missing"
            exit 1
          fi
          
          if [ -n "${{ secrets.STRIPE_WEBHOOK_SECRET }}" ]; then
            echo "‚úÖ STRIPE_WEBHOOK_SECRET is set"
          else
            echo "‚ùå STRIPE_WEBHOOK_SECRET is missing"
            exit 1
          fi
          
          echo "‚úÖ Stripe secrets validation passed"
          
      - name: Validate Analytics Secrets
        run: |
          echo "üîç Validating analytics secrets..."
          
          if [ -n "${{ secrets.SENTRY_DSN }}" ]; then
            echo "‚úÖ SENTRY_DSN is set"
          else
            echo "‚ö†Ô∏è SENTRY_DSN is missing (optional)"
          fi
          
          if [ -n "${{ secrets.MIXPANEL_TOKEN }}" ]; then
            echo "‚úÖ MIXPANEL_TOKEN is set"
          else
            echo "‚ö†Ô∏è MIXPANEL_TOKEN is missing (optional)"
          fi
          
          echo "‚úÖ Analytics secrets validation passed"
          
      - name: Validate Google Services
        run: |
          echo "üîç Validating Google services secrets..."
          
          if [ -n "${{ secrets.GOOGLE_CLIENT_ID }}" ]; then
            echo "‚úÖ GOOGLE_CLIENT_ID is set"
          else
            echo "‚ùå GOOGLE_CLIENT_ID is missing"
            exit 1
          fi
          
          if [ -n "${{ secrets.GOOGLE_CLIENT_SECRET }}" ]; then
            echo "‚úÖ GOOGLE_CLIENT_SECRET is set"
          else
            echo "‚ùå GOOGLE_CLIENT_SECRET is missing"
            exit 1
          fi
          
          echo "‚úÖ Google services validation passed"
          
      - name: Generate Secrets Report
        run: |
          echo "üìä Secrets Validation Report"
          echo "=========================="
          echo "‚úÖ All required secrets are configured"
          echo "‚úÖ CI/CD pipeline should be functional"
          echo "‚úÖ Ready for deployment"
          
      - name: Notify Success
        if: success()
        run: |
          echo "üéâ All secrets validation passed!"
          echo "‚úÖ CI/CD pipeline is properly configured"
          
      - name: Notify Failure
        if: failure()
        run: |
          echo "‚ùå Secrets validation failed!"
          echo "Please check the missing secrets above"
          echo "Refer to .github/workflows/secrets-management.md for setup instructions"