# Deployment Configuration for CI/CD Pipeline

# This file defines the deployment configuration for all platforms and environments.
# It ensures consistent deployment across all targets.

deployment_configuration:
  # Web Deployments
  web_deployments:
    firebase_hosting:
      enabled: true
      project_id: "appoint-production"
      public_directory: "build/web"
      ignore_patterns:
        - "firebase.json"
        - "**/.*"
        - "**/node_modules/**"
      rewrite_rules:
        - source: "**"
          destination: "/index.html"
      headers:
        - source: "**"
          headers:
            - key: "Cache-Control"
              value: "no-cache, no-store, must-revalidate"
      environment_variables:
        FIREBASE_TOKEN: "${{ secrets.FIREBASE_TOKEN }}"
        FIREBASE_PROJECT_ID: "${{ secrets.FIREBASE_PROJECT_ID }}"

    digitalocean_app_platform:
      enabled: true
      app_id: "${{ secrets.DIGITALOCEAN_APP_ID }}"
      region: "fra1"
      environment_slug: "node-js"
      build_command: "rm -rf .next && npm install && npm run build"
      run_command: "npm start"
      routes:
        - path: "/"
      environment_variables:
        DIGITALOCEAN_ACCESS_TOKEN: "${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}"

    staging_environment:
      enabled: true
      firebase_project: "appoint-staging"
      public_directory: "build/web"
      environment_variables:
        FIREBASE_TOKEN: "${{ secrets.FIREBASE_TOKEN }}"
        ENVIRONMENT: "staging"

  # Mobile Deployments
  mobile_deployments:
    android:
      play_store:
        enabled: true
        package_name: "com.appoint.app"
        track: "internal"
        release_type: "aab"
        environment_variables:
          PLAY_STORE_JSON_KEY: "${{ secrets.PLAY_STORE_JSON_KEY }}"
          ANDROID_KEYSTORE_BASE64: "${{ secrets.ANDROID_KEYSTORE_BASE64 }}"
          ANDROID_KEYSTORE_PASSWORD: "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}"
          ANDROID_KEY_ALIAS: "${{ secrets.ANDROID_KEY_ALIAS }}"
          ANDROID_KEY_PASSWORD: "${{ secrets.ANDROID_KEY_PASSWORD }}"

      firebase_app_distribution:
        enabled: true
        app_id: "${{ secrets.FIREBASE_APP_ID_ANDROID }}"
        release_notes: "Automated build from CI/CD pipeline"
        groups: ["testers", "qa-team"]

    ios:
      app_store:
        enabled: true
        bundle_id: "com.appoint.app"
        track: "TestFlight"
        environment_variables:
          IOS_P12_CERTIFICATE: "${{ secrets.IOS_P12_CERTIFICATE }}"
          IOS_P12_PASSWORD: "${{ secrets.IOS_P12_PASSWORD }}"
          APPLE_ISSUER_ID: "${{ secrets.APPLE_ISSUER_ID }}"
          APPLE_API_KEY_ID: "${{ secrets.APPLE_API_KEY_ID }}"
          APPLE_API_PRIVATE_KEY: "${{ secrets.APPLE_API_PRIVATE_KEY }}"

      firebase_app_distribution:
        enabled: true
        app_id: "${{ secrets.FIREBASE_APP_ID_IOS }}"
        release_notes: "Automated build from CI/CD pipeline"
        groups: ["testers", "qa-team"]

# Environment Configuration
environments:
  production:
    name: "Production"
    description: "Production environment for live users"
    protection_rules:
      required_reviewers: 2
      dismiss_stale_reviews: true
      require_status_checks: true
      required_status_checks:
        - "ci-cd-pipeline"
        - "security-qa"
    deployment_strategy:
      type: "blue-green"
      rollback_enabled: true
      health_check_url: "https://appoint.com/health"
      health_check_timeout: 300
    environment_variables:
      ENVIRONMENT: "production"
      DEBUG: "false"
      LOG_LEVEL: "info"
      API_BASE_URL: "https://api.appoint.com"

  staging:
    name: "Staging"
    description: "Staging environment for testing"
    protection_rules:
      required_reviewers: 1
      dismiss_stale_reviews: true
      require_status_checks: true
      required_status_checks:
        - "ci-cd-pipeline"
    deployment_strategy:
      type: "rolling"
      rollback_enabled: true
      health_check_url: "https://staging.appoint.com/health"
      health_check_timeout: 180
    environment_variables:
      ENVIRONMENT: "staging"
      DEBUG: "true"
      LOG_LEVEL: "debug"
      API_BASE_URL: "https://staging-api.appoint.com"

  development:
    name: "Development"
    description: "Development environment for local testing"
    protection_rules:
      required_reviewers: 0
      dismiss_stale_reviews: false
      require_status_checks: false
    deployment_strategy:
      type: "direct"
      rollback_enabled: false
      health_check_url: "http://localhost:3000/health"
      health_check_timeout: 60
    environment_variables:
      ENVIRONMENT: "development"
      DEBUG: "true"
      LOG_LEVEL: "debug"
      API_BASE_URL: "http://localhost:3000"

# Deployment Strategies
deployment_strategies:
  blue_green:
    description: "Blue-green deployment with zero downtime"
    steps:
      - name: "Deploy to blue environment"
        action: "deploy"
        target: "blue"
      - name: "Health check blue environment"
        action: "health_check"
        target: "blue"
        timeout: 300
      - name: "Switch traffic to blue"
        action: "switch_traffic"
        target: "blue"
      - name: "Health check production"
        action: "health_check"
        target: "production"
        timeout: 300
      - name: "Decommission green environment"
        action: "cleanup"
        target: "green"

  rolling:
    description: "Rolling deployment with gradual rollout"
    steps:
      - name: "Deploy to subset of instances"
        action: "deploy"
        target: "subset"
        percentage: 25
      - name: "Health check subset"
        action: "health_check"
        target: "subset"
        timeout: 180
      - name: "Deploy to remaining instances"
        action: "deploy"
        target: "remaining"
      - name: "Health check all instances"
        action: "health_check"
        target: "all"
        timeout: 180

  direct:
    description: "Direct deployment without safety checks"
    steps:
      - name: "Deploy directly"
        action: "deploy"
        target: "direct"
      - name: "Basic health check"
        action: "health_check"
        target: "direct"
        timeout: 60

# Health Check Configuration
health_checks:
  web_application:
    endpoint: "/health"
    expected_status: 200
    timeout_seconds: 30
    retry_count: 3
    retry_delay_seconds: 10
    success_criteria:
      - "HTTP status 200"
      - "Response time < 5 seconds"
      - "Database connectivity"
      - "External service connectivity"

  mobile_application:
    endpoint: "/api/health"
    expected_status: 200
    timeout_seconds: 60
    retry_count: 2
    retry_delay_seconds: 30
    success_criteria:
      - "HTTP status 200"
      - "API response valid"
      - "Authentication working"

# Rollback Configuration
rollback_configuration:
  automatic_rollback:
    enabled: true
    triggers:
      - "health_check_failure"
      - "deployment_timeout"
      - "error_rate_threshold"
    error_rate_threshold: 5.0
    deployment_timeout_minutes: 10

  manual_rollback:
    enabled: true
    steps:
      - name: "Stop current deployment"
        action: "stop_deployment"
      - name: "Revert to previous version"
        action: "revert_version"
      - name: "Deploy previous version"
        action: "deploy_previous"
      - name: "Health check rollback"
        action: "health_check"
        timeout: 300

# Notification Configuration
notifications:
  slack:
    enabled: true
    webhook_url: "${{ secrets.SLACK_WEBHOOK_URL }}"
    channels:
      - "#deployments"
      - "#alerts"
    events:
      - "deployment_started"
      - "deployment_succeeded"
      - "deployment_failed"
      - "rollback_triggered"

  discord:
    enabled: true
    webhook_url: "${{ secrets.DISCORD_WEBHOOK }}"
    events:
      - "deployment_started"
      - "deployment_succeeded"
      - "deployment_failed"

  email:
    enabled: false
    recipients:
      - "devops@appoint.com"
      - "alerts@appoint.com"
    events:
      - "deployment_failed"
      - "rollback_triggered"

# Monitoring Configuration
monitoring:
  metrics:
    - "deployment_duration"
    - "deployment_success_rate"
    - "rollback_rate"
    - "health_check_success_rate"
    - "error_rate"

  alerts:
    deployment_failure:
      threshold: 0
      action: "immediate_notification"
    high_error_rate:
      threshold: 5.0
      action: "alert_and_rollback"
    slow_response_time:
      threshold: 5000
      action: "alert"

# Security Configuration
security:
  secrets_management:
    rotation_schedule:
      firebase_token: "90_days"
      apple_certificates: "12_months"
      android_keystore: "12_months"
      play_store_key: "90_days"
      digitalocean_token: "90_days"

  access_control:
    deployment_approval:
      production: true
      staging: false
      development: false
    required_reviewers:
      production: 2
      staging: 1
      development: 0

# Performance Configuration
performance:
  build_optimization:
    parallel_builds: true
    max_parallel_jobs: 4
    cache_dependencies: true
    cache_build_artifacts: true

  deployment_optimization:
    incremental_deployment: true
    asset_compression: true
    cdn_integration: true
    load_balancing: true

# Troubleshooting Configuration
troubleshooting:
  debug_mode:
    enabled: false
    log_level: "debug"
    verbose_output: true

  common_issues:
    deployment_timeout:
      solution: "Increase timeout or check network connectivity"
    health_check_failure:
      solution: "Verify application health and dependencies"
    rollback_failure:
      solution: "Manual intervention required"
    secret_expiration:
      solution: "Rotate secrets and update configuration"

  emergency_procedures:
    - "Stop all deployments"
    - "Revert to last known good version"
    - "Notify stakeholders"
    - "Investigate root cause"
    - "Implement fixes"
    - "Resume deployments"