name: Web Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      deploy_to_firebase:
        description: 'Deploy to Firebase'
        required: false
        default: true
        type: boolean
      deploy_to_digitalocean:
        description: 'Deploy to DigitalOcean'
        required: false
        default: true
        type: boolean
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  FLUTTER_VERSION: '3.24.5'
  NODE_VERSION: '18'

jobs:
  build-web:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          cache: true
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          flutter pub get
          npm install
          
      - name: Generate code
        run: |
          echo "üîß Running code generation..."
          dart run build_runner build --delete-conflicting-outputs || echo "‚ö†Ô∏è Code generation completed with warnings"
        continue-on-error: true
        
      - name: Build web app
        run: |
          echo "üåê Building Flutter web app..."
          flutter build web --release --web-renderer html
          echo "‚úÖ Web build completed"
          
      - name: Verify web build
        run: |
          echo "üîç Verifying web build..."
          if [ ! -f "build/web/index.html" ]; then
            echo "‚ùå Build verification failed: index.html not found"
            exit 1
          fi
          if [ ! -f "build/web/flutter_bootstrap.js" ]; then
            echo "‚ùå Build verification failed: flutter_bootstrap.js not found"
            exit 1
          fi
          echo "‚úÖ Web build verification passed"
          
      - name: Upload web artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web/
          retention-days: 30

  deploy-firebase:
    needs: build-web
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event.inputs.deploy_to_firebase != 'false'
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download web artifacts
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: build/web/
          
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
        
      - name: Deploy to Firebase Hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          if [ -n "$FIREBASE_TOKEN" ]; then
            echo "üöÄ Deploying to Firebase Hosting..."
            firebase deploy --only hosting --token "$FIREBASE_TOKEN"
            echo "‚úÖ Firebase deployment completed"
          else
            echo "‚ùå Firebase token not available"
            exit 1
          fi

  deploy-digitalocean:
    needs: build-web
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event.inputs.deploy_to_digitalocean != 'false'
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download web artifacts
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: build/web/
          
      - name: Setup doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          
      - name: Deploy to DigitalOcean App Platform
        run: |
          echo "üåä Deploying to DigitalOcean App Platform..."
          doctl apps create-deployment ${{ secrets.DIGITALOCEAN_APP_ID }}
          echo "‚úÖ DigitalOcean deployment completed"

  deploy-staging:
    needs: build-web
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download web artifacts
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: build/web/
          
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
        
      - name: Deploy to Firebase Staging
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          if [ -n "$FIREBASE_TOKEN" ]; then
            echo "üöÄ Deploying to Firebase Staging..."
            firebase use staging
            firebase deploy --only hosting --token "$FIREBASE_TOKEN"
            echo "‚úÖ Firebase staging deployment completed"
          else
            echo "‚ùå Firebase token not available"
            exit 1
          fi

  notify-deployment:
    needs: [deploy-firebase, deploy-digitalocean, deploy-staging]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify on success
        if: success()
        run: |
          echo "‚úÖ Web deployment completed successfully"
          
      - name: Notify on failure
        if: failure()
        run: |
          echo "‚ùå Web deployment failed"
          
      - name: Slack notification
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          text: |
            Web Deployment Status: ${{ job.status }}
            Repository: ${{ github.repository }}
            Branch: ${{ github.ref }}
            Environment: ${{ github.event.inputs.environment || 'production' }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}