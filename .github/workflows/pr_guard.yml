name: PR Guard - Free Access System

on:
  pull_request:
    paths:
      - 'admin/**'
      - 'functions/src/free_access_expiration.ts'
      - 'firestore.rules'
      - 'firestore.indexes.json'
      - 'scripts/seed_free_access_demo.ts'
      - '.github/workflows/pr_guard.yml'

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd admin
          npm install
          cd ../functions
          npm install

      - name: Lint admin code
        run: |
          cd admin
          npm run lint

      - name: Lint functions code
        run: |
          cd functions
          npm run lint

      - name: Run unit tests
        run: |
          cd admin
          npm test -- --coverage --watchAll=false

      - name: Build functions
        run: |
          cd functions
          npm run build

      - name: Validate Firestore rules
        run: |
          firebase firestore:rules:validate firestore.rules

      - name: Check Firestore indexes
        run: |
          firebase firestore:indexes:validate firestore.indexes.json

  security-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Security audit
        run: |
          cd admin
          npm audit --audit-level moderate
          cd ../functions
          npm audit --audit-level moderate

      - name: Check for hardcoded secrets
        run: |
          if grep -r "password\|secret\|key" --include="*.ts" --include="*.js" --include="*.json" admin/ functions/ | grep -v "test\|mock\|example"; then
            echo "Potential hardcoded secrets found"
            exit 1
          fi

  deployment-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate deployment files
        run: |
          # Check if all required files exist
          test -f firestore.rules || (echo "firestore.rules missing" && exit 1)
          test -f firestore.indexes.json || (echo "firestore.indexes.json missing" && exit 1)
          test -f functions/src/free_access_expiration.ts || (echo "free_access_expiration.ts missing" && exit 1)
          test -f admin/src/services/free_access_service.ts || (echo "free_access_service.ts missing" && exit 1)

      - name: Check documentation
        run: |
          test -f ADMIN_FREE_ACCESS.md || (echo "ADMIN_FREE_ACCESS.md missing" && exit 1)
          test -f scripts/seed_free_access_demo.ts || (echo "seed_free_access_demo.ts missing" && exit 1)

  coverage-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd admin
          npm install

      - name: Run tests with coverage
        run: |
          cd admin
          npm test -- --coverage --watchAll=false --coverageThreshold='{"global":{"branches":80,"functions":80,"lines":80,"statements":80}}'
