// Mocks generated by Mockito 5.4.4 from annotations
// in appoint/test/mocks/service_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: REDACTED_TOKEN
import 'dart:async' as _i5;
import 'dart:io' as _i8;

import 'package:appoint/core/auth_service.dart' as _i6;
import 'package:appoint/infra/firebase_storage_service.dart' as _i7;
import 'package:appoint/infra/firestore_service.dart' as _i4;
import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:firebase_auth/firebase_auth.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: REDACTED_TOKEN
// ignore_for_file: implementation_imports
// ignore_for_file: REDACTED_TOKEN
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDocumentSnapshot_0<T extends Object?> extends _i1.SmartFake
    implements _i2.DocumentSnapshot<T> {
  _FakeDocumentSnapshot_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserCredential_1 extends _i1.SmartFake
    implements _i3.UserCredential {
  _FakeUserCredential_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FirestoreService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirestoreService extends _i1.Mock implements _i4.FirestoreService {
  MockFirestoreService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.DocumentSnapshot<Map<String, dynamic>>> getDoc(
    String? collection,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDoc,
          [
            collection,
            id,
          ],
        ),
        returnValue:
            _i5.Future<_i2.DocumentSnapshot<Map<String, dynamic>>>.value(
                _FakeDocumentSnapshot_0<Map<String, dynamic>>(
          this,
          Invocation.method(
            #getDoc,
            [
              collection,
              id,
            ],
          ),
        )),
      ) as _i5.Future<_i2.DocumentSnapshot<Map<String, dynamic>>>);

  @override
  _i5.Future<void> setDoc(
    String? collection,
    String? id,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDoc,
          [
            collection,
            id,
            data,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i6.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.User?> currentUser() => (super.noSuchMethod(
        Invocation.method(
          #currentUser,
          [],
        ),
        returnValue: _i5.Future<_i3.User?>.value(),
      ) as _i5.Future<_i3.User?>);

  @override
  _i5.Future<void> signIn(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [
            email,
            password,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i3.UserCredential> signInWithGooglePopup() => (super.noSuchMethod(
        Invocation.method(
          #signInWithGooglePopup,
          [],
        ),
        returnValue: _i5.Future<_i3.UserCredential>.value(_FakeUserCredential_1(
          this,
          Invocation.method(
            #signInWithGooglePopup,
            [],
          ),
        )),
      ) as _i5.Future<_i3.UserCredential>);
}

/// A class which mocks [FirebaseStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseStorageService extends _i1.Mock
    implements _i7.FirebaseStorageService {
  MockFirebaseStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<String> uploadFile(
    _i8.File? file,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadFile,
          [
            file,
            path,
          ],
        ),
        returnValue: _i5.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #uploadFile,
            [
              file,
              path,
            ],
          ),
        )),
      ) as _i5.Future<String>);
}
