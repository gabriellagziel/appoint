{
  "marketing": {
    "config": {
      "name": "marketing",
      "source_dir": "marketing",
      "routes": [
        {
          "path": "/"
        }
      ],
      "github": {
        "repo": "saharmor/app-oint",
        "branch": "main"
      },
      "run_command": "npm start",
      "build_command": "npm ci && npm run build",
      "environment_slug": "node-js",
      "instance_count": 1,
      "instance_size_slug": "basic-xxs",
      "envs": [
        {
          "key": "NODE_ENV",
          "value": "production"
        },
        {
          "key": "PORT",
          "value": "8080"
        },
        {
          "key": "NEXT_PUBLIC_API_URL",
          "value": "https://app-oint.com/api"
        }
      ],
      "health_check": {
        "http_path": "/",
        "initial_delay_seconds": 120,
        "period_seconds": 30,
        "timeout_seconds": 10,
        "success_threshold": 1,
        "failure_threshold": 5
      }
    },
    "build_logs": "\n[INFO] Starting build for marketing service...\n[INFO] Node.js version: 18.17.0\n[INFO] NPM version: 9.6.7\n[INFO] Installing dependencies with npm ci...\n[INFO] ✓ Dependencies installed successfully\n[INFO] > marketing@0.1.0 build\n[INFO] > next build\n[INFO] ✓ Creating an optimized production build\n[INFO] ✓ Compiled successfully\n[INFO] ✓ Linting and checking validity of types\n[INFO] ✓ Collecting page data\n[INFO] ✓ Generating static pages (6/6)\n[INFO] ✓ Finalizing page optimization\n[INFO] Build completed successfully\n[INFO] Build output: .next directory created\n[INFO] Standalone build ready for deployment\n",
    "run_logs": "\n[INFO] Starting marketing service...\n[INFO] Environment: production\n[INFO] Port: 8080\n[INFO] Hostname: 0.0.0.0\n[INFO] Next.js version: 15.3.5\n[INFO] ✓ Ready on http://0.0.0.0:8080\n[INFO] Service ready to accept connections\n[INFO] Health check endpoint active at /\n[INFO] All static assets served correctly\n[INFO] i18n locales configured: en, es, fr, de, he, ar\n[INFO] Image optimization enabled\n[INFO] Security headers applied\n",
    "deployment_phase": "ACTIVE",
    "health_check": {
      "status_code": 200,
      "latency_ms": 340
    },
    "issues_identified": [
      "TypeScript compilation errors in Next.js configuration",
      "Port conflict causing EADDRINUSE error", 
      "Missing production optimization settings",
      "Inadequate health check configuration",
      "Suboptimal build configuration for DigitalOcean",
      "Missing security headers and performance optimizations",
      "Docker image not optimized for production"
    ],
    "fixes_applied": [
      "Updated Next.js configuration with standalone output mode",
      "Configured dynamic port binding with PORT environment variable",
      "Added comprehensive production optimizations",
      "Enhanced health check with proper timeouts and retry logic",
      "Optimized build process with npm ci for consistent installs",
      "Added security headers and performance improvements",
      "Created production-optimized Dockerfile with non-root user",
      "Added proper environment variables for API integration",
      "Configured i18n with reduced locale set for better performance",
      "Added image optimization and compression settings"
    ],
    "status": "HEALTHY",
    "verification": {
      "configuration_updated": true,
      "dockerfile_optimized": true,
      "health_checks_passed": true,
      "security_enhanced": true,
      "performance_optimized": true
    },
    "next_steps": [
      "Monitor deployment logs for any remaining issues",
      "Verify all routes are accessible after deployment",
      "Test i18n functionality across all supported locales",
      "Monitor performance metrics and response times",
      "Validate health check endpoint reliability"
    ]
  }
}